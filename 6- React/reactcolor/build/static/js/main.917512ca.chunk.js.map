{"version":3,"sources":["components/Header/header.js","components/LeftSide/leftSide.js","components/RightSide/rightSide.js","components/Article/article.js","components/Body/body.js","components/Footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","Component","LeftSide","src","alt","RightSide","Article","Body","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mXAyBeA,G,6LAPP,OACI,4BAAQC,UAAU,UACd,uBAAGC,KAAK,KAAR,kB,GAdKC,cC0BNC,G,uLAxBP,OACI,yBAAKH,UAAU,YACX,4BACI,4BACI,yBAAKI,IAAI,yFAAyFC,IAAI,MAE1G,4BACI,yBAAKD,IAAI,qFAAqFC,IAAI,Y,GATnGH,cCuBRI,G,uLAxBP,OACI,yBAAKN,UAAU,aACX,4BACI,qCACA,qCACA,qCACA,2C,GARIE,cCsBTK,G,uLApBP,OACI,yBAAKP,UAAU,WACX,sGACA,0F,GALME,cC8BPM,G,uLAtBP,OACI,yBAAKR,UAAU,QACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANGE,cCUJO,G,sLAbP,OACI,4BAAQT,UAAU,UACd,gE,GAJKE,cCmBNQ,E,iLAbX,OACA,yBAAKV,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANYE,aCIES,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.917512ca.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './header.css';\n\n\n\n\nclass Header extends Component{\n    \n    // static create() {\n    //     const header = document.createElement(\"header\")\n    //     header.className = \"Header\"\n    //     const a = document.createElement(\"a\")\n    //     a.setAttribute(\"href\", \"#\")\n    //     a.innerHTML = `Home Page`\n    //     header.append(a)\n    //     return header\n    // }\n    render(){\n        return (\n            <header className=\"Header\">\n                <a href=\"/\">Home Page</a>\n            </header>\n        )\n    }\n}\nexport default Header","import React, {Component} from 'react';\nimport './leftSide.css';\n\n\n\n\nclass LeftSide extends Component{\n    render(){\n        return(\n            <div className=\"LeftSide\">\n                <ul>\n                    <li>\n                        <img src=\"https://simply-communicate.com/wp-content/uploads/2019/03/facebook-2661207_960_720.jpg\" alt=\"\"/>\n                    </li>\n                    <li>\n                        <img src=\"https://assets.materialup.com/uploads/82eae29e-33b7-4ff7-be10-df432402b2b6/preview\" alt=\"\"/>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n    // static create(){\n    //     const left = document.createElement(\"div\")\n    //     left.className = \"LeftSide\"\n    //     const ul = document.createElement(\"ul\")\n    //     ul.innerHTML = `<li><img src=\"https://simply-communicate.com/wp-content/uploads/2019/03/facebook-2661207_960_720.jpg\"></li>\n    //                     <li><img src=\"https://assets.materialup.com/uploads/82eae29e-33b7-4ff7-be10-df432402b2b6/preview\"></li>`\n    //     left.append(ul)\n\n    //     return left\n    // }\n}\nexport default LeftSide","import React, {Component} from 'react';\nimport './rightSide.css';\n\nclass RightSide extends Component{\n    render(){\n        return(\n            <div className=\"RightSide\">\n                <ul>\n                    <li>Item1</li>\n                    <li>Item2</li>\n                    <li>Item3</li>\n                    <li>Item4</li>\n                </ul>\n            </div>\n        )\n    }\n    // static create(){\n    //     const right = document.createElement(\"div\")\n    //     right.className = \"RightSide\"\n    //     const ul = document.createElement(\"ul\")\n    //     ul.innerHTML = `<li>Item 1</li>\n    //                     <li>Item 2</li>\n    //                     <li>Item 3</li>\n    //                     <li>Item 4</li>`\n    //     right.append(ul)\n\n    //     return right\n    // }\n}\nexport default RightSide","import React, {Component} from 'react';\nimport './article.css';\n\nclass Article extends Component{\n    render(){\n        return(\n            <div className=\"Article\">\n                <p>This is an example of class components using only normal JS ES6 modules</p>\n                <p>We will test the module export and import capabilities</p>\n            </div>\n        )\n    }\n    // static create(){\n    //     const arti = document.createElement(\"div\")\n    //     arti.className = \"Article\"\n    //     arti.innerHTML = `<input type =\"text\"\n    //                         id = \"inpt\"\n    //                         placeholder = \"Enter Title\">\n    //                         <h2 id = \"title\"></h2>\n    //                         <p>This is an example of class components using only normal JS ES6 modules</p>\n    //                         <p>We will test the module export and import capabilities</p>`\n    \n    //     return arti\n    // }\n}\nexport default Article","import React, {Component} from 'react';\nimport LeftSide from \"../LeftSide/leftSide\"\nimport RightSide from \"../RightSide/rightSide\"\nimport Article from \"../Article/article\"\nimport \"./body.css\"\n\n\n\n\nclass Body extends Component{\n    render(){\n        return(\n            <div className=\"Body\">\n                <LeftSide />\n                <Article />\n                <RightSide />\n\n            </div>\n        )\n    }\n    // static create(){\n    //     const body = document.createElement(\"div\")\n    //     body.className = \"Body\"\n    //     const left = LeftSide.create()\n    //     const right = RightSide.create()\n    //     const arti = Article.create()\n    //     body.append(left)\n    //     body.append(arti)\n    //     body.append(right)\n\n    //     return body\n    // }\n}\nexport default Body","import React, {Component} from 'react';\nimport './footer.css';\n\n\nclass Footer extends Component {\n    rener(){\n        return(\n            <footer className=\"Footer\">\n                <p>Modules Testing Application.</p>\n            </footer>\n        )\n    }\n    // static create() {\n    //     const f = document.createElement(\"footer\")\n    //     f.className = \"Footer\"\n    //     f.innerHTML = `<p>Modules Testing Application.</p>`\n    //     return f\n    // }\n}\nexport default Footer","import React, {Component} from 'react';\nimport './App.css';\n\nimport Header from \"./components/Header/header\"\nimport Body from './components/Body/body';\nimport Footer from \"./components/Footer/footer\"\n\n\nclass App extends Component {\n  render(){\n    return (\n    <div className=\"App\">\n      <Header />\n      <Body />\n      <Footer />\n        \n     \n    </div>\n  );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}